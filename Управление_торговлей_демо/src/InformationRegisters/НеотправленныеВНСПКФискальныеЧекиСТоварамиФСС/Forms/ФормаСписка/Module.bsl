
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтправитьПодтверждениеНСПК(Команда)
	
	ОтправитьПодтверждениеНСПКНаСервере(Элементы.Список.ВыделенныеСтроки);
	Элементы.Список.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Отправить подтверждение НСПКНа сервере.
// 
// Параметры:
//  ВыделенныеСтроки - Массив ИЗ РегистрСведенийКлючЗаписи.НеотправленныеВНСПКФискальныеЧекиСТоварамиФСС - Выделенные строки
&НаСервереБезКонтекста
Процедура ОтправитьПодтверждениеНСПКНаСервере(ЗНАЧ ВыделенныеСтроки)
	
	Для Каждого НеотправленныйФискальныйЧекКлючЗаписи Из ВыделенныеСтроки Цикл

		НачатьТранзакцию();
		Попытка
			УстановитьБлокировкуДляОтправкиПодтвержденияНСПК(НеотправленныйФискальныйЧекКлючЗаписи.ДокументОснование);
			
			СуммаСертификатамиЭСФСС = ПодготовитьФискальныйЧекКОтправкеВНСПК(НеотправленныйФискальныйЧекКлючЗаписи.ДокументОснование);
			ЗафиксироватьТранзакцию();
			
			НачатьТранзакцию();
			УстановитьБлокировкуДляОтправкиПодтвержденияНСПК(НеотправленныйФискальныйЧекКлючЗаписи.ДокументОснование);
			
			ПередачаДанныхФискальногоЧека(НеотправленныйФискальныйЧекКлючЗаписи.ДокументОснование, СуммаСертификатамиЭСФСС);
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось отправить подтверждение НСПК по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Справочники.ВидыЗапасов,
				,
				ТекстСообщения);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			ВызватьИсключение;
			
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьБлокировкуДляОтправкиПодтвержденияНСПК(ДокументОснование)

	Блокировка = Новый БлокировкаДанных();
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЧекККМ") Тогда
		ЭлементБлокировки = Блокировка.Добавить("Документ.ЧекККМ");
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЧекККМВозврат") Тогда
		ЭлементБлокировки = Блокировка.Добавить("Документ.ЧекККМВозврат");
	КонецЕсли;
	
	Если Блокировка.Количество() Тогда
		ЭлементБлокировки.УстановитьЗначение("Ссылка", ДокументОснование);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
	КонецЕсли;
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.НеотправленныеВНСПКФискальныеЧекиСТоварамиФСС");
	ЭлементБлокировки.УстановитьЗначение("ДокументОснование", ДокументОснование);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	
	Блокировка.Заблокировать();
	
КонецПроцедуры

// Подготовить фискальный чек к отправке в НСПК
// 
// Параметры:
//  ДокументОснование - ДокументСсылка - Документ, по которому отправляется фискальный чек в НСПК
// 
// Возвращаемое значение:
//  Неопределено, Число - Сумма серфтификатами ЭС ФСС
//
&НаСервереБезКонтекста
Функция ПодготовитьФискальныйЧекКОтправкеВНСПК(ДокументОснование)
	
	ПолучаемыеРеквизитыДокумента = "ЦенаВключаетНДС,Товары,ОплатаПлатежнымиКартами";
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснование, ПолучаемыеРеквизитыДокумента);
	
	СтрокиДляОплатыЭС = ЧекККМЛокализация.ТоварыФССВДокументеКОплате(
		РеквизитыДокумента.Товары.Выгрузить(),
		РеквизитыДокумента.ЦенаВключаетНДС);
	
	Если СтрокиДляОплатыЭС.Количество() = 0 Тогда
		УдалитьЗаписьПоОтправленномуВНСПКФискальномуЧеку(ДокументОснование);
		Возврат Неопределено;
	КонецЕсли;
	
	СуммаСертификатамиЭСФСС = СуммаОплатыЭСФССПоДокументу(РеквизитыДокумента.ОплатаПлатежнымиКартами.Выгрузить());
	
	Если СуммаСертификатамиЭСФСС = 0 Тогда
		УдалитьЗаписьПоОтправленномуВНСПКФискальномуЧеку(ДокументОснование);
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат СуммаСертификатамиЭСФСС;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ПередачаДанныхФискальногоЧека(ДокументОснование, СуммаСертификатамиЭСФСС)
	
	Результат = ЭлектронныеСертификатыНСПКУТ.ПередачаДанныхФискальногоЧека(ДокументОснование, СуммаСертификатамиЭСФСС);
	
	Если Результат.Результат Тогда
		УдалитьЗаписьПоОтправленномуВНСПКФискальномуЧеку(ДокументОснование);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Результат.ОписаниеОшибки) Тогда
		ОбщегоНазначения.СообщитьПользователю(Результат.ОписаниеОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СуммаОплатыЭСФССПоДокументу(ОплатыПлатежнойКартой)
	
	Возврат РозничныеПродажиЛокализация.СуммаОплатыЭСФССПоДокументу(ОплатыПлатежнойКартой);
	
КонецФункции

&НаСервереБезКонтекста
Процедура УдалитьЗаписьПоОтправленномуВНСПКФискальномуЧеку(ДокументОснование)
	
	НаборЗаписей = РегистрыСведений.НеотправленныеВНСПКФискальныеЧекиСТоварамиФСС.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ДокументОснование.Значение = ДокументОснование;
	НаборЗаписей.Отбор.ДокументОснование.Использование = Истина;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

#КонецОбласти