#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВнешнийОбъект = Параметры.ВнешнийОбъект;
	МетаданныеПотребителя = Параметры.ВнешнийОбъект.Метаданные();
	ИмяПотребителя = ?(МетаданныеПотребителя.Синоним <> "",
		МетаданныеПотребителя.Синоним,
		МетаданныеПотребителя.Имя);
	ПолноеИмяПотребителя = МетаданныеПотребителя.ПолноеИмя();
	
	ОбновитьПредставлениеСоздаваемогоОбъекта();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПроверитьПодключение();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИнтеграцияС1СДокументооборотом3_ЗаписаноПравило" Тогда
		ОбновитьПредставлениеСоздаваемогоОбъекта();
		
	ИначеЕсли ИмяСобытия = "Документооборот_ВыбратьЗначениеИзСпискаЗавершение" И Источник = ЭтотОбъект
			И Параметр = "ОбъектДО" И ЗначениеЗаполнено(ОбъектДОID) И ЗначениеЗаполнено(ОбъектДОТип) Тогда
		// добавление новой связи
		ИнтеграцияС1СДокументооборотБазоваяФункциональностьВызовСервера.ДобавитьСвязь(
			ОбъектДОID,
			ОбъектДОТип,
			ВнешнийОбъект);
		ИнтеграцияС1СДокументооборотБазоваяФункциональностьКлиент.Оповестить_ДобавлениеСвязи(
			ОбъектДОID,
			ОбъектДОТип,
			ВнешнийОбъект);
		
	ИначеЕсли ИмяСобытия = "Документооборот_ДобавлениеСвязи" И Параметр.Объект = ВнешнийОбъект Тогда
		ПолучитьДанныеСвязанногоОбъектаДО();
		ОбновитьДекорацииОбъектаДО();
		
	ИначеЕсли ИмяСобытия = "Документооборот_УдалениеСвязи" И Параметр.Объект = ВнешнийОбъект Тогда
		ОбъектДО = "";
		ОбъектДОID = "";
		ОбъектДОТип = "";
		ОбъектДОНавигационнаяСсылка = "";
		ОбновитьДекорацииОбъектаДО();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НавигационнаяСсылкаМассив = СтрРазделить(НавигационнаяСсылкаФорматированнойСтроки, "||", Ложь);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТипОбъектаИС", НавигационнаяСсылкаМассив[1]);
	
	Если НавигационнаяСсылкаМассив[0] = "ФормаЭлемента" Тогда
		ИмяФормыПравил = "Справочник.ПравилаИнтеграцииС1СДокументооборотом3.Форма.ФормаЭлемента";
		
	ИначеЕсли НавигационнаяСсылкаМассив[0] = "ФормаСписка" Тогда
		ИмяФормыПравил = "Справочник.ПравилаИнтеграцииС1СДокументооборотом3.Форма.ФормаСписка";
		
	Иначе
		Возврат;
		
	КонецЕсли;
	
	ОткрытьФорму(ИмяФормыПравил, ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияНастройкиАвторизацииНажатие(Элемент)
	
	Оповещение = Новый ОписаниеОповещения("ДекорацияНастройкиАвторизацииНажатиеЗавершение", ЭтотОбъект);
	ИмяФормыПараметров = "Обработка.ИнтеграцияС1СДокументооборотБазоваяФункциональность.Форма.АвторизацияВ1СДокументооборот";
	
	ОткрытьФорму(ИмяФормыПараметров,, ЭтотОбъект,,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияНастройкиАвторизацииНажатиеЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = Истина Тогда
		ОбработатьФормуСогласноВерсииСервиса();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОбъектСоздатьНажатие(Элемент)
	
	Если ЗначениеЗаполнено(ОбъектДО) Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	
	ИнтеграцияС1СДокументооборот3Клиент.НачатьСозданиеСвязанногоОбъектаДО(ВнешнийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОбъектСоздатьНажатиеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// ??????????????????
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОбъектВыбратьНажатие(Элемент)
	
	ДополнительныеПараметры = Новый Структура;
	
	Если ЗначениеЗаполнено(ТипСоздаваемогоОбъекта) Тогда
		
		ДекорацияОбъектВыбратьНажатиеПослеВыбораТипа(ТипСоздаваемогоОбъекта, ДополнительныеПараметры);
		
	Иначе // тип неизвестен, предложим выбор пользователю
		
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ДекорацияОбъектВыбратьНажатиеПослеВыбораТипа", ЭтотОбъект, ДополнительныеПараметры);
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Заголовок", НСтр("ru = 'Выбрать в 1С:Документообороте'"));
		ПараметрыФормы.Вставить("ЗаголовокКоманды", НСтр("ru = 'Выбрать'"));
		ПараметрыФормы.Вставить("ОбъектИС", ВнешнийОбъект);
		
		ОткрытьФорму("Обработка.ИнтеграцияС1СДокументооборот3.Форма.ВыборТипаОбъектаДокументооборота",
			ПараметрыФормы,,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОбъектНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ИнтеграцияС1СДокументооборот3Клиент.ОткрытьОбъектДО(ОбъектДОНавигационнаяСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОбъектОчиститьНажатие(Элемент)
	
	Если Не ЗначениеЗаполнено(ОбъектДОID) Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ДекорацияОбъектОчиститьНажатиеЗавершение", ЭтотОбъект);
	ТекстВопроса = СтрШаблон(
		НСтр("ru = 'Очистить соответствие для
			|%1?'"), Строка(ВнешнийОбъект));
	
	ИнтеграцияС1СДокументооборотБазоваяФункциональностьКлиент.ПоказатьВопросДаНет(
		Оповещение,
		ТекстВопроса,
		НСтр("ru='Очистить'"),
		НСтр("ru='Не очищать'"),
		КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОбъектОчиститьНажатиеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	СохраненныйID = ОбъектДОID;
	СохраненныйТип = ОбъектДОТип;
	УдалитьСвязьНаСервере();
	
	ИнтеграцияС1СДокументооборотБазоваяФункциональностьКлиент.Оповестить_УдалениеСвязи(
		СохраненныйID,
		СохраненныйТип,
		ВнешнийОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Проверяет подключение к ДО, выводя окно авторизации, если необходимо, и изменяя форму согласно результату.
//
&НаКлиенте
Процедура ПроверитьПодключение() Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПроверитьПодключениеЗавершение", ЭтотОбъект, Неопределено);
	ИнтеграцияС1СДокументооборотБазоваяФункциональностьКлиент.ПроверитьПодключение(
		ОписаниеОповещения, ЭтотОбъект, "ПроверитьПодключение");
	
КонецПроцедуры

// Вызывается после проверки подключения к ДО и изменяет форму согласно результату.
//
&НаКлиенте
Процедура ПроверитьПодключениеЗавершение(Результат, Параметры) Экспорт
	
	ОбработатьФормуСогласноВерсииСервиса();
	
КонецПроцедуры

// Изменяет форму согласно доступности сервиса ДО и номеру его версии.
//
&НаСервере
Процедура ОбработатьФормуСогласноВерсииСервиса()
	
	ВерсияСервиса = ИнтеграцияС1СДокументооборотБазоваяФункциональность.ВерсияСервиса();
	
	Если ПустаяСтрока(ВерсияСервиса) Тогда // идет подключение
		
		Элементы.ГруппаСтраницыПодключения.ТекущаяСтраница = Элементы.СтраницаОжидаетсяПодключение;
		Элементы.СтраницаОжидаетсяПодключение.Видимость = Истина;
		
	Иначе // версия известна
		
		Если ВерсияСервиса = "0.0.0.0" Тогда
			
			Элементы.ГруппаСтраницыПодключения.ТекущаяСтраница = Элементы.СтраницаДокументооборотНедоступен;
			Элементы.СтраницаОжидаетсяПодключение.Видимость = Ложь;
			
		ИначеЕсли ИнтеграцияС1СДокументооборотБазоваяФункциональность.ДоступенФункционалВерсииСервиса("3.0.7.1") Тогда
			
			Элементы.ГруппаСтраницыПодключения.ТекущаяСтраница = Элементы.СтраницаДокументооборотДоступен;
			ПолучитьДанныеСвязанногоОбъектаДО();
			
		Иначе
			
			Элементы.ГруппаСтраницыПодключения.ТекущаяСтраница = Элементы.СтраницаВерсияНеПоддерживается;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОбновитьДекорацииОбъектаДО();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПредставлениеСоздаваемогоОбъекта()
	
	ТипСоздаваемогоОбъекта = "";
	ПредставлениеСоздаваемогоОбъекта = "";
	ВидДокументаДО = "";
	ВидДокументаДОID = "";
	
	// Получим тип и представление создаваемого объекта, если они однозначны.
	ПодходящиеПравилаИнтеграции = ИнтеграцияС1СДокументооборот3ВызовСервера.ПодходящиеПравилаИнтеграцииОбъекта(
		ВнешнийОбъект);
	РеквизитыПравил = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(
		ПодходящиеПравилаИнтеграции,
		"ТипОбъектаДО, ПредставлениеОбъектаДО, ВидДокументаДО, ВидДокументаДОID");
	Для Каждого Правило Из ПодходящиеПравилаИнтеграции Цикл
		Если Не ЗначениеЗаполнено(ТипСоздаваемогоОбъекта) Тогда
			ТипСоздаваемогоОбъекта = РеквизитыПравил[Правило].ТипОбъектаДО;
		ИначеЕсли ТипСоздаваемогоОбъекта <> РеквизитыПравил[Правило].ТипОбъектаДО Тогда
			ТипСоздаваемогоОбъекта = "";
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Для Каждого Правило Из ПодходящиеПравилаИнтеграции Цикл
		Если Не ЗначениеЗаполнено(ПредставлениеСоздаваемогоОбъекта) Тогда
			ПредставлениеСоздаваемогоОбъекта = РеквизитыПравил[Правило].ПредставлениеОбъектаДО;
		ИначеЕсли ПредставлениеСоздаваемогоОбъекта <> РеквизитыПравил[Правило].ПредставлениеОбъектаДО Тогда
			ПредставлениеСоздаваемогоОбъекта = "";
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Для Каждого Правило Из ПодходящиеПравилаИнтеграции Цикл
		Если Не ЗначениеЗаполнено(ВидДокументаДОID) Тогда
			ВидДокументаДО = РеквизитыПравил[Правило].ВидДокументаДО;
			ВидДокументаДОID = РеквизитыПравил[Правило].ВидДокументаДОID;
		ИначеЕсли ВидДокументаДОID <> РеквизитыПравил[Правило].ВидДокументаДОID Тогда
			ВидДокументаДО = "";
			ВидДокументаДОID = "";
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ПредставлениеСоздаваемогоОбъекта) Тогда
		
		Элементы.ДекорацияОбъектЗаголовок.Заголовок = СтрШаблон("%1:", ПредставлениеСоздаваемогоОбъекта);
		Элементы.ГруппаИнфо.Видимость = Ложь;
		
	ИначеЕсли ЗначениеЗаполнено(ТипСоздаваемогоОбъекта) Тогда
		
		Элементы.ДекорацияОбъектЗаголовок.Заголовок = СтрШаблон("%1:",
			ИнтеграцияС1СДокументооборот3КлиентСервер.ПредставлениеТипаОбъектаXDTO(
				ТипСоздаваемогоОбъекта,
				"ЕдинственноеЧисло"));
		Элементы.ГруппаИнфо.Видимость = Ложь;
		
	Иначе // нет подходящих правил
		
		Элементы.ДекорацияОбъектЗаголовок.Заголовок = НСтр("ru = 'Соответствие в 1С:Документообороте'");
		
		Если ПодходящиеПравилаИнтеграции.Количество() = 0 Тогда
			Инфо = СтрШаблон(НСтр("ru = 'Не настроено заполнение документа 1С:Документооборота из ""%1"".'"),
				ИмяПотребителя);
			Команда = "ФормаЭлемента";
		Иначе
			Инфо = СтрШаблон(НСтр("ru = 'Настроено заполнение разных типов объектов 1С:Документооборота из ""%1"".
				|Измените правила или удалите лишние.'"),
				ИмяПотребителя);
			Команда = "ФормаСписка";
		КонецЕсли;
		
		Если ПравоДоступа("Добавление", Метаданные.Справочники.ПравилаИнтеграцииС1СДокументооборотом3) Тогда
			Инфо = СтроковыеФункции.ФорматированнаяСтрока(
				СтрШаблон(
					НСтр("ru = '%1 <a href = ""%2||%3"">Настроить.</a>'"),
					Инфо,
					Команда,
					ПолноеИмяПотребителя));
		КонецЕсли;
		Элементы.ДекорацияИнфо.Заголовок = Инфо;
		
		Элементы.ГруппаИнфо.Видимость = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеСвязанногоОбъектаДО()
	
	ОбъектДО = "";
	ОбъектДОID = "";
	ОбъектДОТип = "";
	ОбъектДОНавигационнаяСсылка = "";
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ОбъектыИнтегрированныеС1СДокументооборотом.ТипОбъектаДО КАК ТипОбъектаДО,
		|	ОбъектыИнтегрированныеС1СДокументооборотом.ИдентификаторОбъектаДО КАК ИдентификаторОбъектаДО
		|ИЗ
		|	РегистрСведений.ОбъектыИнтегрированныеС1СДокументооборотом КАК ОбъектыИнтегрированныеС1СДокументооборотом
		|ГДЕ
		|	ОбъектыИнтегрированныеС1СДокументооборотом.Объект = &ВнешнийОбъект");
	Запрос.УстановитьПараметр("ВнешнийОбъект", ВнешнийОбъект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	КоличествоСвязей = Выборка.Количество();
	
	Если КоличествоСвязей = 1 Тогда
		
		Выборка.Следующий();
		Прокси = ИнтеграцияС1СДокументооборотБазоваяФункциональностьПовтИсп.ПолучитьПрокси();
		Колонки = Новый Массив;
		Колонки.Добавить("name");
		Попытка
			Ответ = ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПолучитьОбъект(
				Прокси,
				Выборка.ТипОбъектаДО,
				Выборка.ИдентификаторОбъектаДО,
				Колонки);
		Исключение
			ОбщегоНазначения.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			РегистрыСведений.ОбъектыИнтегрированныеС1СДокументооборотом.УдалитьСвязь(
				Выборка.ИдентификаторОбъектаДО,
				Выборка.ТипОбъектаДО,
				ВнешнийОбъект.Ссылка);
			Возврат;
		КонецПопытки;
		
		Если Ответ.objects.Количество() = 1
				И ИнтеграцияС1СДокументооборотБазоваяФункциональность.СвойствоУстановлено(Ответ.objects[0], "name") Тогда
			ОбъектДО = Ответ.objects[0].name;
			ОбъектДОID = Выборка.ИдентификаторОбъектаДО;
			ОбъектДОТип = Выборка.ТипОбъектаДО;
			ОбъектДОНавигационнаяСсылка = Ответ.objects[0].objectID.navigationRef;
		КонецЕсли;
		
	ИначеЕсли КоличествоСвязей > 1 Тогда
		
		ВызватьИсключение СтрШаблон(НСтр("ru = 'С объектом ""%1"" связано более одного объекта в 1С:Документооборот.
			|Общее количество связей: %2'"),
			ВнешнийОбъект.Ссылка,
			КоличествоСвязей);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДекорацииОбъектаДО()
	
	ОбъектДОЗаполнен = ЗначениеЗаполнено(ОбъектДОID);
	
	Элементы.ДекорацияОбъектСоздать.Видимость = Не ОбъектДОЗаполнен;
	Элементы.ДекорацияОбъектИли.Видимость = Не ОбъектДОЗаполнен;
	Элементы.ДекорацияОбъектВыбрать.Видимость = Не ОбъектДОЗаполнен;
	
	Элементы.ДекорацияОбъект.Видимость = ОбъектДОЗаполнен;
	Элементы.ДекорацияОбъектОчистить.Видимость = ОбъектДОЗаполнен;
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСвязьНаСервере()
	
	ИнтеграцияС1СДокументооборотБазоваяФункциональностьВызовСервера.УдалитьСвязь(
		ОбъектДОID,
		ОбъектДОТип,
		ВнешнийОбъект);
	
	ОбъектДО = "";
	ОбъектДОID = "";
	ОбъектДОТип = "";
	ОбъектДОНавигационнаяСсылка = "";
	
	ОбновитьДекорацииОбъектаДО();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОбъектВыбратьНажатиеПослеВыбораТипа(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Строка") Или Результат = "" Тогда
		Возврат;
	КонецЕсли;
	
	ВидДокументаОтбор = Новый Структура("Значение, ЗначениеID",
		ВидДокументаДО,
		ВидДокументаДОID);
	Отбор = ИнтеграцияС1СДокументооборотБазоваяФункциональностьКлиент.ОтборПриВыбореСвязанногоОбъекта(
		ВнешнийОбъект,
		Результат,
		ВидДокументаОтбор);
	ИнтеграцияС1СДокументооборот3Клиент.ВыбратьЗначениеИзСписка(
		Результат,
		"ОбъектДО",
		ЭтотОбъект,
		Отбор);
	
КонецПроцедуры

#КонецОбласти