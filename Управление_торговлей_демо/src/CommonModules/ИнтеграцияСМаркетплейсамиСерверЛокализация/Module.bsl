
#Область ПрограммныйИнтерфейс


#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс  

// Возврращает имя регламентного задания
// 
// Возвращаемое значение:
//    Строка - имя регламентного задания
Функция ИмяРегламентногоЗадания() Экспорт
	
	ИмяРегламентногоЗадания = "";
	
	//++ Локализация
	ИмяРегламентногоЗадания = НСтр("ru = 'ИнтеграцияСЯндексМаркетСервер.ЗагрузитьРекомендованныеЦеныЯндексМаркет'");	
	//-- Локализация
	
	Возврат ИмяРегламентногоЗадания;
	
КонецФункции    

// Вызывает локализуемую процедуру ЗагрузитьРекомендованныеЦеныЯндексМаркет
//
// Параметры:
//         ПараметрыЗадания - Структура:
//                  *НемедленноеОбновление - Булево  - признак, определяющий 
//                                         запуск по инициативе пользователя
//                  *ТаблицаВидовЦен - ТаблицаЗначений  - таблица видов цен
Процедура ЗагрузитьРекомендованныеЦеныЯндексМаркет(ПараметрыЗадания) Экспорт  
	
	//++ Локализация
	ИнтеграцияСЯндексМаркетСервер.ЗагрузитьРекомендованныеЦеныЯндексМаркет(ПараметрыЗадания);	
	//-- Локализация  
	
КонецПроцедуры

// Возвращает имя формы выбора
// 
// Возвращаемое значение:
//    Строка - имя формы выбора
Функция ИмяФормыВыбора() Экспорт
	
	ИмяФормыВыбора = "";
	
	//++ Локализация
	ИмяФормыВыбора = НСтр("ru = 'Обработка.ЯндексМаркетВитринаФулфилмент.Форма.ФормаВыбораЗагружаемыхВидовЦен'");	
	//-- Локализация     
	
	Возврат ИмяФормыВыбора;
	
КонецФункции

// Возврращает значение функциональной опции ИспользоватьИнтеграциюСЯндексМаркет
// для функционала, который не локализуется
// 
// Возвращаемое значение:
//    Булево - значение функциональной опции ИспользоватьИнтеграциюСЯндексМаркет
Функция ФункциональнаяОпцияИспользоватьИнтеграциюСЯндексМаркет() Экспорт
	
	ИспользоватьИнтеграциюСЯндексМаркет = Ложь;
	
	//++ Локализация
	ИспользоватьИнтеграциюСЯндексМаркет = ПолучитьФункциональнуюОпцию("ИспользоватьИнтеграциюСЯндексМаркет");	
	//-- Локализация
	
	Возврат ИспользоватьИнтеграциюСЯндексМаркет;
	
КонецФункции

// Возвращает описание регламентного задания
// 
// Параметры:
//     ИдентификаторЗадания - Строка - Идентификатор задания
//
// Возвращаемое значение:
//         Структура - структура с параметрами задания
Функция ДополнительныйОтборСпискаЗаданий(ИдентификаторЗадания) Экспорт
	
	ДопОтбор = "";
	
	//++ Локализация
	Если ИдентификаторЗадания = Неопределено Тогда 
		ДопОтбор = Новый Структура("Метаданные", Метаданные.РегламентныеЗадания.ЗагрузитьРекомендованныеЦеныЯндексМаркет);
	Иначе	
		ДопОтбор = Новый Структура("УникальныйИдентификатор",Новый УникальныйИдентификатор(ИдентификаторЗадания));
	КонецЕсли;	
	//-- Локализация
	
	Возврат ДопОтбор;
	
КонецФункции


// Возвращает описание регламентного задания, если список содержит 
// значения только со способом задания цены Загружается из Яндекс.Маркет
//
// Параметры:
//     ВидыЦен - Массив Из СправочникСсылка.ВидыЦен- Массив видов цен, выбанных в форме настройки регламентного
//              задания
//     ВариантОбновленияЦен - Число - номер выбранного варианта обновления цен
//
// Возвращаемое значение:
//         Структура:
//                  *ИмяМетаданных - Строка  - имя метеданных
//                  *СинонимМетаданных - Строка  - синоним метеданных
//                  *ИмяМетодаМетаданных - Строка  - имя метода метеданных
//                  *Отказ - Булево - отказ
Функция СписокСодержитВидыЦенДляРазныхРегламентов(ВидыЦен, ВариантОбновленияЦен) Экспорт	

	Отказ = Ложь;
	ОписаниеЗадания = Новый Структура("ИмяМетаданных, СинонимМетаданных, ИмяМетодаМетаданных, Отказ");
	
	//++ Локализация
	Если ВидыЦен.Количество()>0 
		И (ВариантОбновленияЦен<>0) Тогда
		Запрос = Новый Запрос();
		Запрос.Параметры.Вставить("СписокЦен",ВидыЦен);
		Запрос.Текст = "ВЫБРАТЬ
		|	СУММА(ВЫБОР КОГДА ВидыЦен.СпособЗаданияЦены = ЗНАЧЕНИЕ(Перечисление.СпособыЗаданияЦен.ЗагружаетсяИзЯндексМаркет) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ) КАК  КоличествоВидовЦенЗагужаетсяИзЯндексМаркет,
		|	СУММА(ВЫБОР КОГДА ВидыЦен.СпособЗаданияЦены = ЗНАЧЕНИЕ(Перечисление.СпособыЗаданияЦен.ЗагружаетсяИзЯндексМаркет) ТОГДА 0 ИНАЧЕ 1 КОНЕЦ) КАК  КоличествоДругихВидовЦен
		|ИЗ
		|	Справочник.ВидыЦен КАК ВидыЦен
		|ГДЕ ВидыЦен.Ссылка В(&СписокЦен) И НЕ ВидыЦен.ПометкаУдаления";
		
		Результат = Запрос.Выполнить().Выбрать(); 
		
		Пока Результат.Следующий() Цикл 
			Если Результат.КоличествоВидовЦенЗагужаетсяИзЯндексМаркет>0  
				И НЕ ВариантОбновленияЦен=3
				И Результат.КоличествоДругихВидовЦен=0 Тогда
				
				Расписание = Новый РасписаниеРегламентногоЗадания;
				Задание = Метаданные.РегламентныеЗадания.ЗагрузитьРекомендованныеЦеныЯндексМаркет;	
				
				ОписаниеЗадания.ИмяМетаданных       = Задание.Имя;
				ОписаниеЗадания.СинонимМетаданных   = Задание.Синоним;
				ОписаниеЗадания.ИмяМетодаМетаданных = Задание.ИмяМетода;
				
			ИначеЕсли Результат.КоличествоВидовЦенЗагужаетсяИзЯндексМаркет>0 
				И Результат.КоличествоДругихВидовЦен>0 Тогда 
					Отказ  = Истина;
			КонецЕсли;
			
		КонецЦикла;	
	КонецЕсли;
	//-- Локализация
	
	ОписаниеЗадания.Отказ = Отказ;

	Возврат ОписаниеЗадания;

КонецФункции


// Возвращает настройки по способу задания цены
//
// Возвращаемое значение:
//                         Структура:
//                                   *ИмяПараметра - Строка - имя параметра 
//                                   *СписокВыбора - Строка - список выбора (строка с разделителем)
//                                   *ЗначениеПараметра - Строка - значение параметра
Функция НастройкиПоСпособуЗаданияЦены() Экспорт
	
	НастройкиПоСпособуЗаданияЦены = Неопределено;
		
	//++ Локализация
		НастройкиПоСпособуЗаданияЦены = ИнтеграцияСЯндексМаркетСервер.СтруктураПараметровСпособаЗаданияЦены();
	//-- Локализация

	Возврат НастройкиПоСпособуЗаданияЦены;	
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции


#КонецОбласти